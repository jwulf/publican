<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE appendix [
<!ENTITY % BOOK_ENTITIES SYSTEM "Users_Guide.ent">
%BOOK_ENTITIES;
]>
<appendix conformance="137" version="5.0" xml:id="appe-Publican-Users_Guide-Discouraged_elements_and_attributes" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
	<info xml:id="info-Publican-Users_Guide-Discouraged_elements_and_attributes">
		<title>Discouraged elements and attributes</title>
	</info>
	 <note>
		<info xml:id="info-Publican-Users_Guide-Supported_unsupported_and_discouraged">
			<title>Supported, unsupported, and discouraged</title>
		</info>
		 <para>
			Not every <firstterm>element</firstterm> (tag) and attribute that works with <application>Publican</application> is <firstterm>supported</firstterm>. Specifically, not every tag has been tested with regards its effect on the presentation of a document once it has been built in HTML or PDF.
		</para>

	</note>
	 <para>
		<application>Publican</application> works with almost all DocBook elements and their attributes, and most of these elements are <firstterm>supported</firstterm>. Supported elements and attributes are those whose presentation in <application>Publican</application> HTML and PDF output has been tested and is of an acceptable quality.
	</para>
	 <para>
		Other elements and attributes that are not known to be harmful or redundant but which have not been tested for quality are <firstterm>unsupported</firstterm>. If material within a particular DocBook tag does not look correct when you build a document in HTML or PDF, the problem could be that the transformation logic for that tag has not yet been tested. Build the document again and examine <application>Publican</application>'s output as the document builds. <application>Publican</application> presents warnings about unsupported tags that it encounters in your XML files.
	</para>
	 <para>
		Finally, a small group of elements and attributes are <firstterm>discouraged</firstterm>. These elements and attributes are set out below, each accompanied by rationale explaining why it is discouraged.
	</para>
	 <para>
		Use the command <prompt>$</prompt> <command>publican print_known</command> to print a list of tags that <application>Publican</application> supports, and the command <command>publican print_banned</command> to print a list of tags that are banned in <application>Publican</application>.
	</para>
	 <section conformance="138" xml:id="sect-Publican-Users_Guide-Discouraged_elements_and_attributes-Discouraged_elements">
		<info xml:id="info-Publican-Users_Guide-Discouraged_elements">
			<title>Discouraged elements</title>
		</info>
		 <variablelist>
			 <varlistentry>
				<term><tag>&lt;glossdiv&gt;</tag></term>
				 <listitem>
					<para>
						This tag set presents terms in glossaries in alphabetical order; however, the terms are sorted according to the original language of the XML, regardless of how these terms are translated into any other language. For example, a glossary produced with <tag>&lt;glossdiv&gt;</tag>s that looks like this in English:
					</para>
					 <variablelist>
						<varlistentry>
							<term>A</term>
							 <listitem>
								<para>
									<literal>Apple</literal> — an <firstterm>apple</firstterm> is…
								</para>

							</listitem>

						</varlistentry>
						 <varlistentry>
							<term>G</term>
							 <listitem>
								<para>
									<literal>Grapes</literal> — <firstterm>grapes</firstterm> are…
								</para>

							</listitem>

						</varlistentry>
						 <varlistentry>
							<term>O</term>
							 <listitem>
								<para>
									<literal>Orange</literal> — an <firstterm>orange</firstterm> is…
								</para>

							</listitem>

						</varlistentry>
						 <varlistentry>
							<term>P</term>
							 <listitem>
								<para>
									<literal>Peach</literal> — a <firstterm>peach</firstterm> is…
								</para>

							</listitem>

						</varlistentry>

					</variablelist>
					 <para>
						looks like this in Spanish:
					</para>
					 <variablelist>
						<varlistentry>
							<term>A</term>
							 <listitem>
								<para>
									<literal>Manzana</literal> — la <firstterm>manzana</firstterm> es…
								</para>

							</listitem>

						</varlistentry>
						 <varlistentry>
							<term>G</term>
							 <listitem>
								<para>
									<literal>Uva</literal> — la <firstterm>uva</firstterm> es…
								</para>

							</listitem>

						</varlistentry>
						 <varlistentry>
							<term>O</term>
							 <listitem>
								<para>
									<literal>Naranja</literal> — la <firstterm>naranja</firstterm> es…
								</para>

							</listitem>

						</varlistentry>
						 <varlistentry>
							<term>P</term>
							 <listitem>
								<para>
									<literal>Melocotonero</literal> — el <firstterm>melocotonero</firstterm> es…
								</para>

							</listitem>

						</varlistentry>

					</variablelist>
					 <para>
						In a translated language that does not share the same writing system with the original language in which the XML was written, the result is even more nonsensical.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><tag>&lt;inlinegraphic&gt;</tag></term>
				 <listitem>
					<para>
						This element presents information as a graphic rather than as text and does not provide an option to present a text alternative to the graphic. This tag therefore hides information from people with visual impairments. In jurisdictions that have legal requirements for electronic content to be accessible to people with visual impairments, documents that use this tag will not satisfy those requirements. Section 508 of the <citetitle>Rehabilitation Act of 1973</citetitle><footnote> <para>
							Refer to <link xlink:href="http://www.section508.gov/" xmlns:xlink="http://www.w3.org/1999/xlink">http://www.section508.gov/</link>
						</para>
						 </footnote> is an example of such a requirement for federal agencies in the United States.
					</para>
					 <para>
						Note that <tag>&lt;inlinegraphic&gt;</tag> is not valid in DocBook version 5.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><tag>&lt;olink&gt;</tag></term>
				 <listitem>
					<para>
						The <tag>&lt;olink&gt;</tag> tag provides cross-references between XML documents. For <tag>&lt;olink&gt;</tag>s to work outside of documents that are all hosted within the same library of XML files, you must provide a URL for the document to which you are linking. In environments that use <tag>&lt;olink&gt;</tag>s, these URLs can be supplied either as an XML entity or with a server-side script. <application>Publican</application> does not provide any way to build or use a database for these links.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>

	</section>
	
	 <section conformance="139" xml:id="sect-Publican-Users_Guide-Discouraged_elements_and_attributes-Discouraged_attributes">
		<info xml:id="info-Publican-Users_Guide-Discouraged_attributes">
			<title>Discouraged attributes</title>
		</info>
		 <variablelist>
			<varlistentry>
				<term><tag>&lt;[element] xreflabel="[any_string_here]"&gt;</tag></term>
				 <listitem>
					<para>
						The presence of an <tag>&lt;xreflabel&gt;</tag> attribute reduces the usability of printed versions of a book. As well, attribute values are not seen by translators and, consequently, cannot be translated.
					</para>
					 <para>
						For example, if you have the following:
					</para>
					 
<programlisting language="XML">&lt;chapter id="ch03" xreflabel="Chapter Three"&gt;
	&lt;title&gt;The Secret to Eternal Life&lt;/title&gt;
	&lt;para&gt;The secret to eternal life is…&lt;/para&gt;
&lt;/chapter&gt;

[more deathless prose here]     

…see &lt;xref linkend="ch03"&gt; for details.</programlisting>
					 <para>
						when your XML is built to HTML, the <tag>&lt;xref&gt;</tag> tag becomes an HTML anchor tag as follows:
					</para>
					 
<programlisting language="XML">…see &lt;a href="#ch03"&gt;Chapter Three&lt;/a&gt; for details.</programlisting>
					 <para>
						The text contained by the anchor tag is the same as the data in the <tag>&lt;xreflabel&gt;</tag> attribute. In this case, it means that readers of printed copies have less information available to them.
					</para>
					 <para>
						You could work around this if you make the value of the <tag>&lt;xreflabel&gt;</tag> attribute the same as the text within the <tag>&lt;title&gt;</tag><tag>&lt;/title&gt;</tag> element tags. However, this duplication increases the risk of typo-level errors and otherwise offers no underlying improvement. And it still reduces the amount of information presented to readers of printed copies.
					</para>
					 <para>
						The following XML:
					</para>
					 
<programlisting language="XML">&lt;chapter id="ch03" xreflabel="The Secret to Eternal Life"&gt;
	&lt;title&gt;The Secret to Eternal Life&lt;/title&gt;
	&lt;para&gt;The secret to eternal life is…&lt;/para&gt;
&lt;/chapter&gt;

[more deathless prose here]     

…see &gt;xref linkend="ch03"&gt; for details.</programlisting>
					 <para>
						Will result in an HTML anchor tag as follows:
					</para>
					 
<programlisting language="XML">…see &lt;a href="#ch03"&gt;The Secret to Eternal Life&lt;/a&gt; for details.</programlisting>
					 <para>
						This isn't as informative as the text presented to a reader if you do not use an <tag>&lt;xreflabel&gt;</tag> attribute. The following:
					</para>
					 
<programlisting language="XML">&lt;chapter id="ch03"&gt;
	&lt;title&gt;The Secret to Eternal Life&lt;/title&gt;
	&lt;para&gt;The secret to eternal life is…&lt;/para&gt;
&lt;/chapter&gt;

[more deathless prose here]		

…see &lt;xref linkend="ch03"&gt; for details.</programlisting>
					 <para>
						transforms the <tag>&lt;xref&gt;</tag> element as follows when built to HTML:
					</para>
					 
<programlisting language="XML">…see &lt;a href="#ch03"&gt;Chapter 3: The Secret to Eternal Life&lt;/a&gt; for details.</programlisting>
					 <para>
						More important, however, are the translation problems that <tag>&lt;xreflabel&gt;</tag> tags cause. Attribute values are not seen by translators. Consequently, they are not translated. Consider the second example above again:
					</para>
					 
<programlisting language="XML">&lt;chapter id="ch03" xreflabel="The Secret to Eternal Life"&gt;
	&lt;title&gt;The Secret to Eternal Life&lt;/title&gt;
	&lt;para&gt;The secret to eternal life is…&lt;/para&gt;
&lt;/chapter&gt;

[more deathless prose here]		

…see &lt;xref linkend="ch03"&gt; for details.</programlisting>
					 <para>
						In English, the <tag>&lt;xref&gt;</tag> is still transformed into an anchor tag as follows:
					</para>
					 
<programlisting language="XML">…see &lt;a href="#ch03"&gt;The Secret to Eternal Life&lt;/a&gt; for details.</programlisting>
					 <para>
						Someone reading the German version, however, will have this as their underlying HTML:
					</para>
					 
<programlisting language="XML">…Sehen Sie &lt;a href="#ch03"&gt;The Secret to Eternal Life&lt;/a&gt; für Details.</programlisting>
					 <para>
						If the <tag>&lt;xreflabel&gt;</tag> attribute is not used, the title and chapter indicator, both properly translated, appear to the reader. That is, the following:
					</para>
					 
<programlisting language="XML">&lt;chapter id="ch03"&gt;
	&lt;title&gt;The Secret to Eternal Life&lt;/title&gt;
	&lt;para&gt;The secret to eternal life is…&lt;/para&gt;
&lt;/chapter&gt;

[more deathless prose here]		

…see &lt;xref linkend="ch03"&gt; for details.</programlisting>
					 <para>
						will, after translation, present thus to a German-speaking reader:
					</para>
					 
<programlisting language="XML">…Sehen Sie &lt;a href="#ch03"&gt;Kapitel 3: Das Geheimnis des ewigen Lebens&lt;/a&gt; für Details.</programlisting>
					 <para>
						This is, not surprisingly, what we want.
					</para>
					 <para>
						The <parameter>xreflabel</parameter> attribute is therefore discouraged.
					</para>

				</listitem>

			</varlistentry>
			 <varlistentry>
				<term><tag>&lt;[element] endterm="[any_string_here]"&gt;</tag></term>
				 <listitem>
					<para>
						The <parameter>endterm</parameter> attribute allows you to present hyperlinked text other than the name of the section or chapter to which the hyperlink points. As such, it decreases the usability of printed versions of documents, and causes difficulty for translators.
					</para>
					 <para>
						The text presented in an element (such as an <tag>&lt;xref&gt;</tag>) that contains the <parameter>endterm</parameter> attribute is taken from a <tag>&lt;titleabbrev&gt;</tag> tag in the target chapter or section. Although the content of the <tag>&lt;titleabbrev&gt;</tag> tag is available to translators in the document's PO files, it is removed from the context of the <tag>&lt;xref&gt;</tag>. The absence of this context makes reliable translation impossible in languages that mark prepositions or articles for grammatical number and grammatical gender.
					</para>
					 <para>
						For example, if you have the following:
					</para>
					 
<programlisting language="XML">&lt;chapter id="The_Secret"&gt;
	&lt;title&gt;The Secret to Eternal Life&lt;/title&gt;
	&lt;titleabbrev id="final"&gt;the final chapter&lt;/titleabbrev&gt;

	&lt;para&gt;The secret to eternal life is…&lt;/para&gt;
&lt;/chapter&gt;

[more deathless prose here]     

The solution is in &lt;xref linkend="The_Secret" endterm="final"/&gt;.</programlisting>
					 <para>
						The text surrounding the <tag>&lt;xref&gt;</tag> presents in the English version of the document as:
					</para>
					 <blockquote>
						<para>
							The solution is in <literal>the final chapter</literal>.
						</para>

					</blockquote>
					 <para>
						A translator sees the <tag>&lt;titleabbrev&gt;</tag> in a PO file as:
					</para>
					 
<programlisting language="GNU Gettext">#. Tag: titleabbrev
#, no-c-format
msgid "the final chapter"
msgstr ""</programlisting>
					 <para>
						and sees the text that contains the <tag>&lt;xref&gt;</tag> elsewhere in the PO file (or, more likely, in a completely different PO file) as:
					</para>
					 
<programlisting language="GNU Gettext">#. Tag: para
#, no-c-format
msgid "The solution is in &lt;xref linkend=\"The_Secret\" endterm=\"final\"/&gt;."
msgstr ""</programlisting>
					 <para>
						The translator has no way of telling what will be substituted for <tag>&lt;xref linkend="The_Secret" endterm="final"/&gt;</tag> when the document builds, so a translation in Italian might read:
					</para>
					 
<programlisting language="GNU Gettext">#. Tag: para
#, no-c-format
msgid "The solution is in &lt;xref linkend=\"The_Secret\" endterm=\"final\"/&gt;."
msgstr "La soluzione è in &lt;xref linkend=\"The_Secret\" endterm=\"final\"/&gt;."</programlisting>
					 <para>
						Note the preposition <literal>in</literal>.
					</para>
					 <para>
						If the translator rendered <literal>the final chapter</literal> in Italian as <literal>l'ultimo capitolo</literal>, the result when the document builds will read:
					</para>
					 <blockquote>
						<para>
							La soluzione è in <literal>l'ultimo capitolo</literal>.
						</para>

					</blockquote>
					 <para>
						This result is comprehensible, but inelegant, because Italian combines some of its prepositions with its definite articles. More elegant Italian would be:
					</para>
					 <blockquote>
						<para>
							La soluzione è nell'<literal>ultimo capitolo</literal>.
						</para>

					</blockquote>
					 <para>
						Without knowing what text will appear in place of &lt;xref linkend="The_Secret" endterm="final"/&gt;, the translator into Italian cannot know whether to leave the preposition <literal>in</literal> to stand by itself, or which of seven different possible combinations with the definite article to use: <literal>nel</literal>, <literal>nei</literal>, <literal>nello</literal>, <literal>nell'</literal>, <literal>negli</literal>, <literal>nella</literal>, or <literal>nelle</literal>.
					</para>
					 <para>
						Furthermore, note that the combined preposition and article also poses a problem with regard to whether this word should be placed in the text surrounding the <tag>&lt;xref&gt;</tag>, or in the <tag>&lt;titleabbrev&gt;</tag>. Whichever of these two solutions the translator selects will cause problems when the <parameter>endterm</parameter> appears in other grammatical contexts, because not all Italian prepositions can combine with the definite article in this way.
					</para>
					 <para>
						Due to the problems that <parameter>endterm</parameter> presents for translation, <application>Publican</application> discourages this attribute.
					</para>

				</listitem>

			</varlistentry>

		</variablelist>

	</section>
	

</appendix>

