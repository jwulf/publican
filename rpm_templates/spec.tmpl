%define wwwdir [% web_dir %]

Name:          [% book_title %]-web-[% lang %]
Version:       [% rpmver %]
Release:       [% rpmrel %]%{?dist}
[%- IF translation %]
Summary:      [% language %] translation of [% book_title %]
Summary([% lang %]):       [% full_subtitle %]
[%- ELSE %]
Summary:       [% full_subtitle %]
[%- END %]
Group:         Documentation
License:       [% license %]
URL:           [% url %]
Source:        [% src_url %]%{name}-%{version}-[% rpmrel %].tgz
BuildArch:      noarch
BuildRoot:     %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildRequires: publican-API = [% spec_version %]
BuildRequires: desktop-file-utils
BuildRequires: [% brand %]
Requires:      publican-API = [% spec_version %]
Requires:      [% brand %]-web
[%- IF web_obsoletes -%]
Obsoletes:    [% web_obsoletes %]
[%- END %]
[%- IF web_req -%]
Requires:    [% web_req %]
[%- END %]
Requires:      [% brand %]-web
Provides:      [% book_title %]-web-[% lang.replace('-', '_') %] = %{version}-%{release}

%description
[%- IF translation %]
[% language %] translation of [% book_title %]

%description -l [% lang %]
[%- END %]
[% abstract %]

%package -n [% book_title %]-[% lang %]
[%- IF translation %]
Summary:       [% language %] translation of [% docname %]
Summary([% lang %]):    [% full_subtitle %]
[%- ELSE %]
Summary:       [% full_subtitle %]
[%- END %]
Group:         Documentation
Requires:      xdg-utils
[%- IF dt_obsoletes %]
Obsoletes:     [% dt_obsoletes %]
[%- END %]
[%- IF dt_requires %]
Requires:     [% dt_requires %]
[% END %]
Provides:      [% book_title %]-[% lang.replace('-', '_') %] = %{version}-%{release}

%description  -n [% book_title %]-[% lang %]
[%- IF translation %]
[% language %] translation of [% docname %]

%description -l [% lang %]  -n [% book_title %]-[% lang %]
[%- END %]
[% abstract %]

%prep
%setup -q

%build
publican build --nocolours [% embedtoc %] --formats="[% web_formats_comma %]" --langs=[% lang %] --publish
publican build --nocolours --formats="[% dt_format %]" --langs=[% lang %]

%install
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/%{wwwdir}
mkdir -p $RPM_BUILD_ROOT%{_datadir}/applications
mkdir -p $RPM_BUILD_ROOT/usr/share/icons/hicolor/scalable/apps
cp -rf publish/[% lang %] $RPM_BUILD_ROOT/%{wwwdir}/.

[%- IF ICONS -%]
for icon in `ls [% lang %]/icons/*x*.png`; do
  size=`echo "$icon" | sed -e 's/.*icons\/\(.*\)\.png/\1/'`;
  mkdir -p $RPM_BUILD_ROOT/usr/share/icons/hicolor/$size/apps
  cp $icon  $RPM_BUILD_ROOT/usr/share/icons/hicolor/$size/apps/[% book_title %]-[% lang %].png;
done
cp [% lang %]/icons/icon.svg  $RPM_BUILD_ROOT/usr/share/icons/hicolor/scalable/apps/[% book_title %]-[% lang %].svg;
[%- ELSE %]
cp [% lang %]/[% img_dir %]/icon.svg  $RPM_BUILD_ROOT/usr/share/icons/hicolor/scalable/apps/[% book_title %]-[% lang %].svg;
[%- END %]


cat > [% book_title %]-[% lang %]-[% rpmver %].desktop <<'EOF'
[Desktop Entry]
Name=[% prod %] [% prodver %]: [% docname %]
Comment=[% full_subtitle %]
Exec=xdg-open %{_docdir}/[% book_title %]-[% lang %]-%{version}/index.html
Icon=[% book_title %]-[% lang %]
Categories=Documentation;[% menu_category %]
Type=Application
Encoding=UTF-8
Terminal=false
EOF

desktop-file-install --dir=${RPM_BUILD_ROOT}%{_datadir}/applications [% book_title %]-[% lang %]-[% rpmver %].desktop

%preun -n [% book_title %]-web-[% lang %]
if [ "$1" = "0" ] ; then # last uninstall
publican update_db --del --lang="[% lang %]" --formats="[% web_formats_comma %]" --name="[% docname %]" --version="[% prodver %]" --product="[% prod %]" --site_config="[% web_cfg %]"
fi

%post -n [% book_title %]-web-[% lang %]
publican update_db --add --lang="[% lang %]" --formats="[% web_formats_comma %]" --name="[% docname %]" --version="[% prodver %]" --product="[% prod %]" --subtitle="[% full_subtitle %]" --abstract="[% full_abstract %]" [% IF name_label.defined %]--name_label="[% name_label %]"[% END %] [% IF version_label != '' %]--version_label="[% version_label %] "[% END %] [% IF product_label != '' %]--product_label="[% product_label %] "[% END %] --site_config="[% web_cfg %]" [% IF sort_order != '' %]--sort_order="[% sort_order %] "[% END %] --book_version="[% book_version %]" [% IF book_src_lang != '' %]--book_src_lang="[% book_src_lang %]"[% END %]

# Update Icon cache if it exists
%post -n [% book_title %]-[% lang %]
touch --no-create %{_datadir}/icons/hicolor &>/dev/null || :

%postun -n [% book_title %]-[% lang %]
if [ $1 -eq 0 ] ; then
    touch --no-create %{_datadir}/icons/hicolor &>/dev/null
    gtk-update-icon-cache %{_datadir}/icons/hicolor &>/dev/null || :
fi

%posttrans -n [% book_title %]-[% lang %]
gtk-update-icon-cache %{_datadir}/icons/hicolor &>/dev/null || :

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-,root,root,-)
%{wwwdir}/[% lang %]

%files -n [% book_title %]-[% lang %]
%defattr(-,root,root,-)
%doc [% tmpdir %]/[% lang %]/[% dt_format %]/*
[%- IF ICONS %]
/usr/share/icons/hicolor/*
[%- ELSE %]
/usr/share/icons/hicolor/scalable/apps/[% book_title %]-[% lang %].svg
[%- END %]
%{_datadir}/applications/[% book_title %]-[% lang %]-[% rpmver %].desktop

%changelog
[% log %]

